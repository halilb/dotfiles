# disable escape time
set -s escape-time 0

# colors
set -g default-terminal "screen-256color"

# Set prefix key to c-a instead of default c-b
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set-option -g default-shell /bin/zsh

# toogle last window by hitting again C-a
bind-key C-a last-window

# Start windows and pane numbering with index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1


# Source file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Use vim keybindings in copy mode
#setw -g mode-keys vi

## Update default binding of `Enter` and `Space to also use copy-pipe
#unbind -T copy-mode-vi Enter
#unbind -T copy-mode-vi Space

#bind-key -T edit-mode-vi Up send-keys -X history-up
#bind-key -T edit-mode-vi Down send-keys -X history-down

## setup 'v' to begin selection as in Vim
#bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

## copy text with `y` in copy mode
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel\; run "tmux save -|pbcopy >/dev/null 2>&1"
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

## copy text with mouse selection without pressing any key
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save -|pbcopy >/dev/null 2>&1"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel

# focus events enabled for terminals that support them
set -g focus-events on

# Sync panes (Send input to all panes in the window). When enabled, pane
# borders become red as an indication.
bind C-s if -F '#{pane_synchronized}' \
                     'setw synchronize-panes off; \
                      setw pane-active-border-style fg=colour63,bg=default; \
                      setw pane-border-format       " #P "' \
                   'setw synchronize-panes on; \
                    setw pane-active-border-style fg=red; \
                    setw pane-border-format       " #P - Pane Synchronization ON "'

# Have a very large history
set -g history-limit 1000000

# Mouse mode on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on

# for tmux navigator
set-option -gw xterm-keys on

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# Equally resize all panes
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical

# Resize panes
#bind-key J resize-pane -D 10
#bind-key K resize-pane -U 10
#bind-key H resize-pane -L 10
#bind-key L resize-pane -R 10

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-Left if-shell "$is_vim" "send-keys C-Left" "select-pane -L"
bind-key -n C-Down if-shell "$is_vim" "send-keys C-Down" "select-pane -D"
bind-key -n C-Up if-shell "$is_vim" "send-keys C-Up" "select-pane -U"
bind-key -n C-Right if-shell "$is_vim" "send-keys C-Right" "select-pane -R"
bind-key -n C-, if-shell "$is_vim" "send-keys C-," "select-pane -l"
#bind-key -T copy-mode-vi C-h select-pane -L
#bind-key -T copy-mode-vi C-j select-pane -D
#bind-key -T copy-mode-vi C-k select-pane -U
#bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

# use prefix- C-l to clear the screen
# overrides tmux navigator
bind-key -n C-l send-keys 'C-l' \; clear-history

# https://github.com/tmux/tmux/issues/543#issuecomment-248980734
#Â set-option -g default-command "reattach-to-user-namespace -l zsh"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
